package ec.eac.sitac.config;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import ec.eac.sitac.dao.UsuarioHome;
import ec.eac.sitac.model.PermisoControlador;
import ec.eac.sitac.model.Usuario;
import ec.eac.sitac.util.CustomURL;

public class UrlAccessInterceptor extends HandlerInterceptorAdapter {
	@Autowired
	UsuarioHome usuarioDao;

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView model) throws Exception {

		CustomURL url = new CustomURL(request.getRequestURI().toString());
		int idEmpresa = url.getIdEmpresa();

		if (idEmpresa < 0)
			return;  

		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
		String nombreUsuario = auth.getName(); //get logged in username

		// Verificando que el usuario tiene acceso a la empresa
		Usuario usuario = usuarioDao.findByUsername(nombreUsuario);
		if(usuario.getRol().getIdRol() != 1){
			if (!usuarioDao.existeUsuarioVsEmpresa(idEmpresa, nombreUsuario))
				response.sendRedirect("/sitac/errorPage");
		}
		
		// Verificando los permisos del usuario con el controlador
		@SuppressWarnings("unchecked")
		List<PermisoControlador> permisos = (List<PermisoControlador>)request.getSession().getAttribute("permisosUsuario");
		
	}
}
